name: Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main

jobs:

  test-against-mlir-bindings:

    runs-on: ${{ matrix.os }}
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-11, windows-2022 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install and configure
        shell: bash
        run: |
          pip install .[test,mlir] -f https://makslevental.github.io/wheels
          if [ ${{ matrix.os }} == 'windows-2022' ]; then
            # configure-mlir-python-utils.exe -y torch_mlir
            pushd /tmp && python -m mlir_utils._configuration -y mlir && popd
          else
            configure-mlir-python-utils -y mlir
          fi

      - name: Test
        shell: bash
        run: |
          if [ ${{ matrix.os }} == 'windows-2022' ]; then
            pytest -s --ignore-glob=*test_smoke* tests
          else
            pytest -s --ignore-glob=*test_smoke* tests
          fi

  test-against-torch-mlir-bindings:

    runs-on: ${{ matrix.os }}
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-11, windows-2022 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install and configure
        shell: bash
        run: |
          pip install .[test,torch-mlir] -f https://llvm.github.io/torch-mlir/package-index -f https://makslevental.github.io/wheels
          if [ ${{ matrix.os }} == 'windows-2022' ]; then
            # configure-mlir-python-utils.exe -y torch_mlir
            pushd /tmp && python -m mlir_utils._configuration -y torch_mlir && popd
          else
            configure-mlir-python-utils -y torch_mlir
          fi

      - name: Test
        shell: bash
        run: |
          if [ ${{ matrix.os }} == 'windows-2022' ]; then
            pytest -s tests/test_smoke.py
          else
            pytest -s tests/test_smoke.py
          fi


  test-against-jax-bindings:

    runs-on: ${{ matrix.os }}
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-11, windows-2022 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install and configure
        shell: bash
        run: |
          pip install .[test,jax] -f https://makslevental.github.io/wheels
          if [ ${{ matrix.os }} == 'windows-2022' ]; then
            # configure-mlir-python-utils.exe -y jaxlib.mlir
            pushd /tmp && python -m mlir_utils._configuration -y jaxlib.mlir && popd
          else
            configure-mlir-python-utils -y jaxlib.mlir
          fi

      - name: Test
        shell: bash
        run: |
          if [ ${{ matrix.os }} == 'windows-2022' ]; then
            pytest -s tests/test_smoke.py
          else
            pytest -s tests/test_smoke.py
          fi
